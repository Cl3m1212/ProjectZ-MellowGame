<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Mellow</title>
  <link rel="stylesheet" href="style.css">
  <link rel="icon" type="image/png" type="image/x-icon" href="logoimg.png">

</head>
<body>
  
<div id="popup" class="popup-container">
    <!-- Content for the pop-up -->
    <span id="popup-message"><center> Welcome to ProjectZ!</center>Join the chat rooms to text and game!</span>
    <!-- Line animation -->
    <div class="popup-line"></div>
  </div>
    <div id="sidebar">
      <a href="javascript:void(0)" class="close-btn" onclick="closeNav()">&times;</a>
      <h1>Type the words in the game room to play!</h1>
      <br>
      <a href="#" id="pong-link">pong</a>
      <a href="#" id="worm-link">worm</a>    
      <a href="#" id="simon-link">simon</a>
      <a href="#" id="pictionary-link">pictionary</a>
      <a href="#" id="password-link">password</a>
      <a href="#" id="clicker-link">clicker</a>
      <br>
    
      <a href="#" id="friendphoto-link">friendphoto Guesser</a>
      <a href="#" id="song-link">Song/lyric Guesser</a>
      <a href="#" id="8ball-link">8 ball</a>
      <a href="#" id="4inarow-link">4 in a row</a>
      <a href="#" id="chess-link">chess</a>
      <a href="#" id="bball-link">bball/ mini golf</a>
      <a href="#" id="metronome-link">metronome game</a>
    </div>
  
    <div id="main">
      <span style="font-size:30px;cursor:pointer" onclick="openNav()">&#9776;</span>
  
    <div id="username-form">
      <label for="username">Enter your username:</label><br>
      <input type="text" id="username"><br>
      <button id="username-submit">Submit</button>
    </div>
  
    <div id="room-form" style="display: none;">
      <label for="room">Enter room code:</label><br>
      <input type="text" id="room"><br>
      <button id="room-submit">Join</button>
    </div>
  
    <div id="chat">
  
      <ul id="messages"></ul>
      
      <form id="form" action="">
        <input id="input"  type="txt" placeholder="Game and text...">
        
        <button >Send</button>
       
      </form>
      
    </div>
  </div>
  <script>
    
    document.addEventListener("DOMContentLoaded", function() {
      const links = document.querySelectorAll("#sidebar a");

      links.forEach(link => {
        link.addEventListener("click", function(event) {
          event.preventDefault(); // Prevent the default behavior of the link
          
          // Copy the text content of the link to the clipboard
          const linkText = link.textContent.trim();
          navigator.clipboard.writeText(linkText)
            .then(() => {
              console.log(`Copied: ${linkText}`);
              showPopup(`Type the copied text "${linkText}" and send it to the chat to play!`);
            })
            .catch(err => {
              console.error('Failed to copy: ', err);
            });
        });
      });
    });
  </script>
  
    <script src="/socket.io/socket.io.js"></script>
  
    <!-- HTML -->
  <style>
    /* Style for the pop-up container */
    .popup-container {
      position: fixed;
      bottom: 20px;
      left: 50%;
      transform: translateX(-50%);
      background-color: #333;
      color: white;
      padding: 10px 20px;
      border-radius: 10px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
      z-index: 1000;
      animation: slideIn 0.5s ease forwards, slideOut 0.5s ease forwards 4s;
    }
  
    /* Animation for sliding in */
    @keyframes slideIn {
      from { transform: translateX(-50%) translateY(100%); opacity: 0; }
      to { transform: translateX(-50%) translateY(0); opacity: 1; }
    }
  
    /* Animation for sliding out */
    @keyframes slideOut {
      from { transform: translateX(-50%) translateY(0); opacity: 1; }
      to { transform: translateX(-50%) translateY(100%); opacity: 0; }
    }
  
    /* Style for the line at the bottom */
    .popup-line {
      position: absolute;
      bottom: -10px;
      left: 50%;
      width: 100%;
      transform: translateX(-50%);
      height: 2px;
      background-color: white;
      animation: lineAnimation 5s linear forwards;
    }
  
    /* Animation for the line */
    @keyframes lineAnimation {
      0% { width: 0; }
      100% { width: 100%; }
    }
  </style>
  
  
    
  <script src="/socket.io/socket.io.js"></script>
  <script src="script.js"></script>
</body>
</html>



const express = require('express');
const http = require('http');
const socketIO = require('socket.io');

const app = express();
const server = http.createServer(app);
const io = socketIO(server);

app.use(express.static(__dirname + '/public'));

const PORT = process.env.PORT || 3000;

// Array to store chat rooms
const chatRooms = {};

// Function to generate random room codes
const generateRoomCode = () => {
  return Math.random().toString(36).substring(2, 8).toUpperCase();
};

// Socket.IO logic
io.on('connection', (socket) => {
  console.log('New user connected');

  // Handle join room event
  socket.on('joinRoom', (data) => {
    const { username, roomCode } = data;
    if (!chatRooms[roomCode]) {
      chatRooms[roomCode] = [];
    }
    chatRooms[roomCode].push(username);
    socket.join(roomCode);
    io.to(roomCode).emit('roomUsers', chatRooms[roomCode]);
  });

  // Handle chat message event
  socket.on('chat message', ({ message, room }) => {
    io.to(room).emit('chat message', message);
  });
  
  // Handle disconnect event
  socket.on('disconnect', () => {
    console.log('User disconnected');
  });
});

server.listen(PORT, () => {
  console.log(`Server running on port ${PORT}`);
});
